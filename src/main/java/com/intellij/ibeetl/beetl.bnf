{
	/*定义parser类全限定名*/
  parserClass='com.intellij.ibeetl.parser.BeetlParser'
  /*每个Java类头部的版权申明*/
  classHeader='copyrightHeader.java'

  extends='com.intellij.extapi.psi.ASTWrapperPsiElement'

  elementTypeHolderClass='com.intellij.ibeetl.GoTypes'
  elementTypeClass='com.intellij.ibeetl.psi.BeetlElementType'
  tokenTypeClass='com.intellij.ibeetl.psi.BeetlTokenType'
  psiTreeUtilClass='com.intellij.ibeetl.psi.BeetlPsiTreeUtil'

  psiClassPrefix='Beetl'
  psiImplClassSuffix='Impl'
  psiPackage='com.intellij.ibeetl.psi'
  psiImplPackage='com.intellij.ibeetl.psi.impl'
  psiImplUtilClass="com.intellij.ibeetl.psi.impl.GoPsiImplUtil"
  parserUtilClass="com.intellij.ibeetl.parser.GoParserUtil"

  tokens=[
    LBRACE               =  '{'
    RBRACE               =  '}'
    LBRACK               =  '['
    RBRACK               =  ']'
    LPAREN               =  '('
    RPAREN               =  ')'
    LDELIMITER           =  '<!--#'
    RDELIMITER           =  '-->'
    HTMLTAG              =  'layui:'
    COLON                =  ':'
    SEMICOLON            =  ';'
    COMMA                =  ','
    EQ                   =  '=='
    ASSIGN               =  '='
    NOT_EQ               =  '!='
    NOT                  =  '!'
    INCREASE             =  '++'
    PLUS_ASSIGN          =  '+='
    PLUS                 =  '+'
    DECREASE             =  '--'
    MINUS_ASSIGN         =  '-='
    MINUS                =  '-'
    COND_OR              =  '||'
    BIT_OR_ASSIGN        =  '|='
    COND_AND             =  '&&'
    BIT_AND_ASSIGN       =  '&='
    BIT_AND              =  '&'
    BIT_OR               =  '|'
    SHIFT_LEFT           =  '<<'
    LESS_OR_EQUAL        =  '<='
    LESS                 =  '<'
    BIT_XOR_ASSIGN       =  '^='
    BIT_XOR              =  '^'
    MUL_ASSIGN           =  '*='
    MUL                  =  '*'
    QUOTIENT_ASSIGN      =  '/='
    QUOTIENT             =  '/'
    REMAINDER_ASSIGN     =  '%='
    REMAINDER            =  '%'
    SHIFT_RIGHT          =  '>>'
    GREATER_OR_EQUAL     =  '>='
    GREATER              =  '>'
    DOT                  =  '.'
    SEMICOLON_SYNTHETIC  = '<NL>'
    TYPE_                = 'type'
  ]

  generateTokenAccessors=true
}
/*
整个beetl的结构：
	左定界符  语句  右定界符
or
	HTML 标签
*/
File ::= LDELIMITER Statement* RDELIMITER {pin(".*")=1}

Statement ::= VarDeclaration
    | VarDeclaration
    | SimpleStatement
    | Block
    | IfStatement
    | SwitchStatement
    | SelectStatement
    | ForStatement
